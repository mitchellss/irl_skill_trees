@use 'sass:math';

@media screen and (max-width: 1450px) {
    $nodeDivWidth: 200px;
    $nodeDivHeight: 100px;

    $rootNodeHeight: 50px;
    $firstLevelVerticalSeparation: 200px;
    $levelVerticalSeparation: 200px;

    $firstLevelHorizontalSeparation: 100px;
    $levelHorizontalSeparation: 50px;

    $levelTwoNodeHeight: $rootNodeHeight + $firstLevelVerticalSeparation;
    $levelThreeNodeHeight: $levelTwoNodeHeight + $levelVerticalSeparation;

    $node1Left: -($nodeDivWidth / 2) - $firstLevelHorizontalSeparation;
    $node0Left: -($nodeDivWidth / 2) + $firstLevelHorizontalSeparation;

    $node11Left: $node1Left - $levelHorizontalSeparation;
    $node10Left: $node1Left + $levelHorizontalSeparation;
    $node01Left: $node0Left - $levelHorizontalSeparation;
    $node00Left: $node0Left + $levelHorizontalSeparation;

    $branchWidth: 20px;
    $firstLevelBranchAngle: math.atan($firstLevelHorizontalSeparation/$firstLevelVerticalSeparation);
    $levelBranchAngle: math.atan($levelHorizontalSeparation/$levelVerticalSeparation);

    $levelLineOneHeight: $rootNodeHeight + $nodeDivHeight / 2;
    $levelLineTwoHeight: $levelLineOneHeight + $firstLevelVerticalSeparation;
    $levelLineThreeHeight: $levelLineTwoHeight + $levelVerticalSeparation;
    $levelLineFourHeight: $levelLineThreeHeight + $levelVerticalSeparation;
    $levelTitleHeightAboveLine: 0px;

    @mixin positionNode($bottom, $left) {
        bottom: $bottom;
        left: $left;
    }

    @mixin descriptionStyle {
        position: absolute;
        display: block;
        width: 300px;
        left: 150px;
        padding: 0px 10px 10px 10px;
        background-color: #999;
        border: 2px solid black;
        border-radius: 10px;
        display: none;
        z-index: 4;
    }

    @mixin branchSytle($bottom, $separation, $height, $width, $degree, $direction) {
        bottom: $bottom;
        left: ($nodeDivWidth / 2 - $branchWidth / 2) + ($separation / 2 * $direction);
        height: $height;
        width: $width;
        transform: skew($degree);
    }
    

    #node_1 {
        @include positionNode($levelTwoNodeHeight, $node1Left);
    }
    #node_0 {
        @include positionNode($levelTwoNodeHeight, $node0Left);
    }

    #node_11 {
        @include positionNode($levelThreeNodeHeight, $node11Left);
    }
    #node_10 {
        @include positionNode($levelThreeNodeHeight, $node10Left);
    }
    #node_01 {
        @include positionNode($levelThreeNodeHeight, $node01Left);
    }
    #node_00 {
        @include positionNode($levelThreeNodeHeight, $node00Left);
    }

    #node_11_1 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 1, $node11Left);
    }
    #node_11_2 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 2, $node11Left);
    }
    #node_11_3 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 3, $node11Left);
    }
    #node_11_4 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 4, $node11Left);
    }
    #node_11_5 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 5, $node11Left);
    }

    #node_10_1 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 1, $node10Left);
    }
    #node_10_2 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 2, $node10Left);
    }
    #node_10_3 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 3, $node10Left);
    }
    #node_10_4 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 4, $node10Left);
    }
    #node_10_5 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 5, $node10Left);
    }
    #node_10_6 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 6, $node10Left);
    }

    #node_01_1 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 1, $node01Left);
    }
    #node_01_2 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 2, $node01Left);
    }
    #node_01_3 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 3, $node01Left);
    }
    #node_01_4 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 4, $node01Left);
    }
    #node_01_5 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 5, $node01Left);
    }

    #node_00_1 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 1, $node00Left);
    }
    #node_00_2 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 2, $node00Left);
    }
    #node_00_3 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 3, $node00Left);
    }
    #node_00_4 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 4, $node00Left);
    }
    #node_00_5 {
        @include positionNode($levelThreeNodeHeight + $levelVerticalSeparation * 5, $node00Left);
    }

    #branch_1 {
        @include branchSytle(
            $rootNodeHeight,
            $firstLevelHorizontalSeparation,
            $firstLevelVerticalSeparation,
            $branchWidth,
            $firstLevelBranchAngle,
            -1
        );
    }
    
    #branch_0 {
        @include branchSytle(
            $rootNodeHeight,
            $firstLevelHorizontalSeparation,
            $firstLevelVerticalSeparation,
            $branchWidth,
            -1 * $firstLevelBranchAngle,
            1
        );
    }
    
    #branch_11 {
        @include branchSytle(
            $rootNodeHeight,
            $levelHorizontalSeparation,
            $levelVerticalSeparation,
            $branchWidth,
            $levelBranchAngle,
            -1
        );
    }
    
    #branch_10 {
        @include branchSytle(
            $rootNodeHeight,
            $levelHorizontalSeparation,
            $levelVerticalSeparation,
            $branchWidth,
            -1 * $levelBranchAngle,
            1
        );
    }
    
    #straight_branch {
        bottom: $nodeDivHeight / 2;
        left: $nodeDivWidth / 2 - $branchWidth / 2;
        height: $levelVerticalSeparation;
        width: $branchWidth;
    }

    #level_line_1 {
        bottom: $levelLineOneHeight;
    }
    
    #level_line_2 {
        bottom: $levelLineTwoHeight;
    }
    
    #level_line_3 {
        bottom: $levelLineThreeHeight;
    }
    
    #level_line_4 {
        bottom: $levelLineFourHeight;
    }

    #level_title_1 {
        bottom: $levelLineOneHeight;
    }
    
    #level_title_2 {
        bottom: $levelLineTwoHeight;
    }
    
    #level_title_3 {
        bottom: $levelLineThreeHeight;
    }
    
    #level_title_4 {
        bottom: $levelLineFourHeight;
    }

    
}
